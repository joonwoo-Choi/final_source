package orpheus.utils {	/**	 * MZ Package 1.0	 * @author INEX	 */	public class MathUtil 	{		//2^n 근사치 연산		public static function squareAppValue(data:Number, target:Number = 2):Number		{			if (Math.abs(data) > target)			{				return MathUtil.squareAppValue(data, target * 2);			}			else			{				return target;			}		}		//n의 배수 근사치 연산  		//multipleRound(10, 8) = 8		//multipleRound(15, 8) = 16		public static function multipleRound(num:Number, multiple:Number):Number		{			var ease:Number = num % multiple;			num += (ease < multiple * .5) ? -ease : multiple - ease;			return num; 		}		public static function toDeg( rad:Number ):Number		{			return rad / Math.PI * 180;		}				public static function toRad( deg:Number ):Number		{			return deg / 180 * Math.PI;		}						public static function getRandomList(pList:Array):Array 		{ 			var pLength:int = pList.length			var kList:Array = []; 			for (var i:uint = 0; i < pLength; i++) 			{ 				var kRandom:int = int(Math.random() * pList.length); 				var kOne:Object = pList[kRandom]; 				kList.push(kOne); 				pList.splice(kRandom, 1); 			} 			return kList; 		} 			}}