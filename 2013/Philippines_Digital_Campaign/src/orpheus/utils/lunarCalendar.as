package orpheus.utils {	/**	 * @author philip	 */	public class lunarCalendar 	{		public var Year:uint;		public var Month:uint;		public var Day:uint;		public var SubMonth:uint;		private var NegaMap:Array;		private var PosiMap:Array;		private var SubMap:Array;		public function lunarCalendar(y:uint, m:uint, d:uint)		{			// 테이블 초기화			NegaMap = new Array();			PosiMap = new Array();			SubMap = new Array();			InitNegaTable(NegaMap, PosiMap, SubMap);				// 기준날자 구하기			var baseindex:uint = GetBaseIndex(y, m, d); // 기준이 되는 index						Year = GetYear(NegaMap[baseindex]);			Month = GetMonth(NegaMap[baseindex]);			SubMonth = SubMap[baseindex];						// 기준 날자와 같을 때			if(GetDay(PosiMap[baseindex]) == d)			{				Day = GetDay(NegaMap[baseindex]);			}			else // 기준 날자가 현재 날자보다 이전			{ 				var py:uint = GetYear(PosiMap[baseindex]);				var pm:uint = GetMonth(PosiMap[baseindex]);				var pd:uint = GetDay(PosiMap[baseindex]);				if(pm == m)				{ // 같은 월					Day = d - pd + 1;				} 				else 				{ // 다른 월(이전)					// 기준월의최대날자 - 기준날자 + 추가날자					Day = DateUtil.getMonthInfo(py, pm)["days"] - pd + d + 1;				}			} // if(found)		} 				private function GetYear(date:uint):uint		{			return uint(date.toString().substr(0,4)); // left(date, 4)		} // function GetYear(date:uint):uint				private function GetMonth(date:uint):uint{			return uint(date.toString().substr(4,2)); // mid(date, 5, 2)		} // function GetMonth(date:uint):uint			private function GetDay(date:uint):uint{			return uint(date.toString().substr(6,2)); // right(date, 2)		} // function GetDay(date:uint):uint					private function GetBaseIndex(y:uint, m:uint, d:uint):uint		{			var index:uint;			var py:uint, pm:uint, pd:uint;			for(var i:uint = 0; i < 556; i++)			{				py = GetYear(PosiMap[i]);				if(py == y){ // 같은 연도					pm = GetMonth(PosiMap[i]);					if(pm == m)					{ // 같은 월						pd = GetDay(PosiMap[i]);						if(pd <= d)						{ // 같은 날자이거나 이전일 때							index = i;							break;						} 						else 						{ // 기준날자가 이후일 때							index = i - 1;							break;						} // if(pd <= d)					} // if(pm == m)				} // if(py == y)			} // for(i=0;i<556;i++)			return index;		} // function GetBaseIndex(y:uint, m:uint, d:uint):uint		// ] 기준 날자 인덱스 구하는 함수 			// [ 초기화 함수		private function InitNegaTable(n:Array, p:Array, s:Array):void		{			n[0]=20060101; p[0]=20060129; s[0]=0; n[1]=20060201; p[1]=20060228; s[1]=0; 			n[2]=20060301; p[2]=20060329; s[2]=0; n[3]=20060401; p[3]=20060428; s[3]=0; 			n[4]=20060501; p[4]=20060527; s[4]=0; n[5]=20060601; p[5]=20060626; s[5]=0; 			n[6]=20060701; p[6]=20060725; s[6]=0; n[7]=20060701; p[7]=20060824; s[7]=1; 			n[8]=20060801; p[8]=20060922; s[8]=0; n[9]=20060901; p[9]=20061022; s[9]=0; 			n[10]=20061001; p[10]=20061121; s[10]=0; n[11]=20061101; p[11]=20061220; s[11]=0; 			n[12]=20061201; p[12]=20070119; s[12]=0; n[13]=20070101; p[13]=20070218; s[13]=0; 			n[14]=20070201; p[14]=20070319; s[14]=0; n[15]=20070301; p[15]=20070417; s[15]=0; 			n[16]=20070401; p[16]=20070517; s[16]=0; n[17]=20070501; p[17]=20070615; s[17]=0; 			n[18]=20070601; p[18]=20070714; s[18]=0; n[19]=20070701; p[19]=20070813; s[19]=0; 			n[20]=20070801; p[20]=20070911; s[20]=0; n[21]=20070901; p[21]=20071011; s[21]=0; 			n[22]=20071001; p[22]=20071110; s[22]=0; n[23]=20071101; p[23]=20071210; s[23]=0; 			n[24]=20071201; p[24]=20080108; s[24]=0; n[25]=20080101; p[25]=20080207; s[25]=0; 			n[26]=20080201; p[26]=20080308; s[26]=0; n[27]=20080301; p[27]=20080406; s[27]=0; 			n[28]=20080401; p[28]=20080505; s[28]=0; n[29]=20080501; p[29]=20080604; s[29]=0; 			n[30]=20080601; p[30]=20080703; s[30]=0; n[31]=20080701; p[31]=20080801; s[31]=0; 			n[32]=20080801; p[32]=20080831; s[32]=0; n[33]=20080901; p[33]=20080929; s[33]=0; 			n[34]=20081001; p[34]=20081029; s[34]=0; n[35]=20081101; p[35]=20081128; s[35]=0; 			n[36]=20081201; p[36]=20081227; s[36]=0; n[37]=20090101; p[37]=20090126; s[37]=0; 			n[38]=20090201; p[38]=20090225; s[38]=0; n[39]=20090301; p[39]=20090327; s[39]=0; 			n[40]=20090401; p[40]=20090425; s[40]=0; n[41]=20090501; p[41]=20090524; s[41]=0; 			n[42]=20090501; p[42]=20090623; s[42]=1; n[43]=20090601; p[43]=20090722; s[43]=0; 			n[44]=20090701; p[44]=20090820; s[44]=0; n[45]=20090801; p[45]=20090919; s[45]=0; 			n[46]=20090901; p[46]=20091018; s[46]=0; n[47]=20091001; p[47]=20091117; s[47]=0; 			n[48]=20091101; p[48]=20091216; s[48]=0; n[49]=20091201; p[49]=20100115; s[49]=0; 			n[50]=20100101; p[50]=20100214; s[50]=0; n[51]=20100201; p[51]=20100316; s[51]=0; 			n[52]=20100301; p[52]=20100414; s[52]=0; n[53]=20100401; p[53]=20100514; s[53]=0; 			n[54]=20100501; p[54]=20100612; s[54]=0; n[55]=20100601; p[55]=20100712; s[55]=0; 			n[56]=20100701; p[56]=20100810; s[56]=0; n[57]=20100801; p[57]=20100908; s[57]=0; 			n[58]=20100901; p[58]=20101008; s[58]=0; n[59]=20101001; p[59]=20101106; s[59]=0; 			n[60]=20101101; p[60]=20101206; s[60]=0; n[61]=20101201; p[61]=20110104; s[61]=0; 			n[62]=20110101; p[62]=20110203; s[62]=0; n[63]=20110201; p[63]=20110305; s[63]=0; 			n[64]=20110301; p[64]=20110403; s[64]=0; n[65]=20110401; p[65]=20110503; s[65]=0; 			n[66]=20110501; p[66]=20110602; s[66]=0; n[67]=20110601; p[67]=20110701; s[67]=0; 			n[68]=20110701; p[68]=20110731; s[68]=0; n[69]=20110801; p[69]=20110829; s[69]=0; 			n[70]=20110901; p[70]=20110927; s[70]=0; n[71]=20111001; p[71]=20111027; s[71]=0; 			n[72]=20111101; p[72]=20111125; s[72]=0; n[73]=20111201; p[73]=20111225; s[73]=0; 			n[74]=20120101; p[74]=20120123; s[74]=0; n[75]=20120201; p[75]=20120222; s[75]=0; 			n[76]=20120301; p[76]=20120322; s[76]=0; n[77]=20120301; p[77]=20120421; s[77]=1; 			n[78]=20120401; p[78]=20120521; s[78]=0; n[79]=20120501; p[79]=20120620; s[79]=0; 			n[80]=20120601; p[80]=20120719; s[80]=0; n[81]=20120701; p[81]=20120818; s[81]=0; 			n[82]=20120801; p[82]=20120916; s[82]=0; n[83]=20120901; p[83]=20121015; s[83]=0; 			n[84]=20121001; p[84]=20121114; s[84]=0; n[85]=20121101; p[85]=20121213; s[85]=0; 			n[86]=20121201; p[86]=20130112; s[86]=0; n[87]=20130101; p[87]=20130210; s[87]=0; 			n[88]=20130201; p[88]=20130312; s[88]=0; n[89]=20130301; p[89]=20130410; s[89]=0; 			n[90]=20130401; p[90]=20130510; s[90]=0; n[91]=20130501; p[91]=20130609; s[91]=0; 			n[92]=20130601; p[92]=20130708; s[92]=0; n[93]=20130701; p[93]=20130807; s[93]=0; 			n[94]=20130801; p[94]=20130905; s[94]=0; n[95]=20130901; p[95]=20131005; s[95]=0; 			n[96]=20131001; p[96]=20131103; s[96]=0; n[97]=20131101; p[97]=20131203; s[97]=0; 			n[98]=20131201; p[98]=20140101; s[98]=0; n[99]=20140101; p[99]=20140131; s[99]=0; 			n[100]=20140201; p[100]=20140301; s[100]=0; n[101]=20140301; p[101]=20140331; s[101]=0; 			n[102]=20140401; p[102]=20140429; s[102]=0; n[103]=20140501; p[103]=20140529; s[103]=0; 			n[104]=20140601; p[104]=20140627; s[104]=0; n[105]=20140701; p[105]=20140727; s[105]=0; 			n[106]=20140801; p[106]=20140825; s[106]=0; n[107]=20140901; p[107]=20140924; s[107]=0; 			n[108]=20140901; p[108]=20141024; s[108]=1; n[109]=20141001; p[109]=20141122; s[109]=0; 			n[110]=20141101; p[110]=20141222; s[110]=0; n[111]=20141201; p[111]=20150120; s[111]=0; 			n[112]=20150101; p[112]=20150219; s[112]=0; n[113]=20150201; p[113]=20150320; s[113]=0; 			n[114]=20150301; p[114]=20150419; s[114]=0; n[115]=20150401; p[115]=20150518; s[115]=0; 			n[116]=20150501; p[116]=20150616; s[116]=0; n[117]=20150601; p[117]=20150716; s[117]=0; 			n[118]=20150701; p[118]=20150815; s[118]=0; n[119]=20150801; p[119]=20150913; s[119]=0; 			n[120]=20150901; p[120]=20151013; s[120]=0; n[121]=20151001; p[121]=20151112; s[121]=0; 			n[122]=20151101; p[122]=20151211; s[122]=0; n[123]=20151201; p[123]=20160110; s[123]=0; 			n[124]=20160101; p[124]=20160209; s[124]=0; n[125]=20160201; p[125]=20160309; s[125]=0; 			n[126]=20160301; p[126]=20160407; s[126]=0; n[127]=20160401; p[127]=20160507; s[127]=0; 			n[128]=20160501; p[128]=20160605; s[128]=0; n[129]=20160601; p[129]=20160704; s[129]=0; 			n[130]=20160701; p[130]=20160803; s[130]=0; n[131]=20160801; p[131]=20160901; s[131]=0; 			n[132]=20160901; p[132]=20161001; s[132]=0; n[133]=20161001; p[133]=20161031; s[133]=0; 			n[134]=20161101; p[134]=20161129; s[134]=0; n[135]=20161201; p[135]=20161229; s[135]=0; 			n[136]=20170101; p[136]=20170128; s[136]=0; n[137]=20170201; p[137]=20170227; s[137]=0; 			n[138]=20170301; p[138]=20170328; s[138]=0; n[139]=20170401; p[139]=20170426; s[139]=0; 			n[140]=20170501; p[140]=20170526; s[140]=0; n[141]=20170501; p[141]=20170624; s[141]=1; 			n[142]=20170601; p[142]=20170723; s[142]=0; n[143]=20170701; p[143]=20170822; s[143]=0; 			n[144]=20170801; p[144]=20170920; s[144]=0; n[145]=20170901; p[145]=20171020; s[145]=0; 			n[146]=20171001; p[146]=20171118; s[146]=0; n[147]=20171101; p[147]=20171218; s[147]=0; 			n[148]=20171201; p[148]=20180117; s[148]=0; n[149]=20180101; p[149]=20180216; s[149]=0; 			n[150]=20180201; p[150]=20180317; s[150]=0; n[151]=20180301; p[151]=20180416; s[151]=0; 			n[152]=20180401; p[152]=20180515; s[152]=0; n[153]=20180501; p[153]=20180614; s[153]=0; 			n[154]=20180601; p[154]=20180713; s[154]=0; n[155]=20180701; p[155]=20180811; s[155]=0; 			n[156]=20180801; p[156]=20180910; s[156]=0; n[157]=20180901; p[157]=20181009; s[157]=0; 			n[158]=20181001; p[158]=20181108; s[158]=0; n[159]=20181101; p[159]=20181207; s[159]=0; 			n[160]=20181201; p[160]=20190106; s[160]=0; n[161]=20190101; p[161]=20190205; s[161]=0; 			n[162]=20190201; p[162]=20190307; s[162]=0; n[163]=20190301; p[163]=20190405; s[163]=0; 			n[164]=20190401; p[164]=20190505; s[164]=0; n[165]=20190501; p[165]=20190603; s[165]=0; 			n[166]=20190601; p[166]=20190703; s[166]=0; n[167]=20190701; p[167]=20190801; s[167]=0; 			n[168]=20190801; p[168]=20190830; s[168]=0; n[169]=20190901; p[169]=20190929; s[169]=0; 			n[170]=20191001; p[170]=20191028; s[170]=0; n[171]=20191101; p[171]=20191126; s[171]=0; 			n[172]=20191201; p[172]=20191226; s[172]=0; n[173]=20200101; p[173]=20200125; s[173]=0; 			n[174]=20200201; p[174]=20200224; s[174]=0; n[175]=20200301; p[175]=20200324; s[175]=0; 			n[176]=20200401; p[176]=20200423; s[176]=0; n[177]=20200401; p[177]=20200523; s[177]=1; 			n[178]=20200501; p[178]=20200621; s[178]=0; n[179]=20200601; p[179]=20200721; s[179]=0; 			n[180]=20200701; p[180]=20200819; s[180]=0; n[181]=20200801; p[181]=20200917; s[181]=0; 			n[182]=20200901; p[182]=20201017; s[182]=0; n[183]=20201001; p[183]=20201115; s[183]=0; 			n[184]=20201101; p[184]=20201215; s[184]=0; n[185]=20201201; p[185]=20210113; s[185]=0; 			n[186]=20210101; p[186]=20210212; s[186]=0; n[187]=20210201; p[187]=20210313; s[187]=0; 			n[188]=20210301; p[188]=20210412; s[188]=0; n[189]=20210401; p[189]=20210512; s[189]=0; 			n[190]=20210501; p[190]=20210610; s[190]=0; n[191]=20210601; p[191]=20210710; s[191]=0; 			n[192]=20210701; p[192]=20210808; s[192]=0; n[193]=20210801; p[193]=20210907; s[193]=0; 			n[194]=20210901; p[194]=20211006; s[194]=0; n[195]=20211001; p[195]=20211105; s[195]=0; 			n[196]=20211101; p[196]=20211204; s[196]=0; n[197]=20211201; p[197]=20220103; s[197]=0; 			n[198]=20220101; p[198]=20220201; s[198]=0; n[199]=20220201; p[199]=20220303; s[199]=0; 			n[200]=20220301; p[200]=20220401; s[200]=0; n[201]=20220401; p[201]=20220501; s[201]=0; 			n[202]=20220501; p[202]=20220530; s[202]=0; n[203]=20220601; p[203]=20220629; s[203]=0; 			n[204]=20220701; p[204]=20220729; s[204]=0; n[205]=20220801; p[205]=20220827; s[205]=0; 			n[206]=20220901; p[206]=20220926; s[206]=0; n[207]=20221001; p[207]=20221025; s[207]=0; 			n[208]=20221101; p[208]=20221124; s[208]=0; n[209]=20221201; p[209]=20221223; s[209]=0; 			n[210]=20230101; p[210]=20230122; s[210]=0; n[211]=20230201; p[211]=20230220; s[211]=0; 			n[212]=20230201; p[212]=20230322; s[212]=1; n[213]=20230301; p[213]=20230420; s[213]=0; 			n[214]=20230401; p[214]=20230520; s[214]=0; n[215]=20230501; p[215]=20230618; s[215]=0; 			n[216]=20230601; p[216]=20230718; s[216]=0; n[217]=20230701; p[217]=20230816; s[217]=0; 			n[218]=20230801; p[218]=20230915; s[218]=0; n[219]=20230901; p[219]=20231015; s[219]=0; 			n[220]=20231001; p[220]=20231113; s[220]=0; n[221]=20231101; p[221]=20231213; s[221]=0; 			n[222]=20231201; p[222]=20240111; s[222]=0; n[223]=20240101; p[223]=20240210; s[223]=0; 			n[224]=20240201; p[224]=20240310; s[224]=0; n[225]=20240301; p[225]=20240409; s[225]=0; 			n[226]=20240401; p[226]=20240508; s[226]=0; n[227]=20240501; p[227]=20240606; s[227]=0; 			n[228]=20240601; p[228]=20240706; s[228]=0; n[229]=20240701; p[229]=20240804; s[229]=0; 			n[230]=20240801; p[230]=20240903; s[230]=0; n[231]=20240901; p[231]=20241003; s[231]=0; 			n[232]=20241001; p[232]=20241101; s[232]=0; n[233]=20241101; p[233]=20241201; s[233]=0; 			n[234]=20241201; p[234]=20241231; s[234]=0; n[235]=20250101; p[235]=20250129; s[235]=0; 			n[236]=20250201; p[236]=20250228; s[236]=0; n[237]=20250301; p[237]=20250329; s[237]=0; 			n[238]=20250401; p[238]=20250428; s[238]=0; n[239]=20250501; p[239]=20250527; s[239]=0; 			n[240]=20250601; p[240]=20250625; s[240]=0; n[241]=20250601; p[241]=20250725; s[241]=1; 			n[242]=20250701; p[242]=20250823; s[242]=0; n[243]=20250801; p[243]=20250922; s[243]=0; 			n[244]=20250901; p[244]=20251021; s[244]=0; n[245]=20251001; p[245]=20251120; s[245]=0; 			n[246]=20251101; p[246]=20251220; s[246]=0; n[247]=20251201; p[247]=20260119; s[247]=0; 			n[248]=20260101; p[248]=20260217; s[248]=0; n[249]=20260201; p[249]=20260319; s[249]=0; 			n[250]=20260301; p[250]=20260417; s[250]=0; n[251]=20260401; p[251]=20260517; s[251]=0; 			n[252]=20260501; p[252]=20260615; s[252]=0; n[253]=20260601; p[253]=20260714; s[253]=0; 			n[254]=20260701; p[254]=20260813; s[254]=0; n[255]=20260801; p[255]=20260911; s[255]=0; 			n[256]=20260901; p[256]=20261011; s[256]=0; n[257]=20261001; p[257]=20261109; s[257]=0; 			n[258]=20261101; p[258]=20261209; s[258]=0; n[259]=20261201; p[259]=20270108; s[259]=0; 			n[260]=20270101; p[260]=20270207; s[260]=0; n[261]=20270201; p[261]=20270308; s[261]=0; 			n[262]=20270301; p[262]=20270407; s[262]=0; n[263]=20270401; p[263]=20270506; s[263]=0; 			n[264]=20270501; p[264]=20270605; s[264]=0; n[265]=20270601; p[265]=20270704; s[265]=0; 			n[266]=20270701; p[266]=20270802; s[266]=0; n[267]=20270801; p[267]=20270901; s[267]=0; 			n[268]=20270901; p[268]=20270930; s[268]=0; n[269]=20271001; p[269]=20271029; s[269]=0; 			n[270]=20271101; p[270]=20271128; s[270]=0; n[271]=20271201; p[271]=20271228; s[271]=0; 			n[272]=20280101; p[272]=20280127; s[272]=0; n[273]=20280201; p[273]=20280225; s[273]=0; 			n[274]=20280301; p[274]=20280326; s[274]=0; n[275]=20280401; p[275]=20280425; s[275]=0; 			n[276]=20280501; p[276]=20280524; s[276]=0; n[277]=20280501; p[277]=20280623; s[277]=1; 			n[278]=20280601; p[278]=20280722; s[278]=0; n[279]=20280701; p[279]=20280820; s[279]=0; 			n[280]=20280801; p[280]=20280919; s[280]=0; n[281]=20280901; p[281]=20281018; s[281]=0; 			n[282]=20281001; p[282]=20281116; s[282]=0; n[283]=20281101; p[283]=20281216; s[283]=0; 			n[284]=20281201; p[284]=20290115; s[284]=0; n[285]=20290101; p[285]=20290213; s[285]=0; 			n[286]=20290201; p[286]=20290315; s[286]=0; n[287]=20290301; p[287]=20290414; s[287]=0; 			n[288]=20290401; p[288]=20290513; s[288]=0; n[289]=20290501; p[289]=20290612; s[289]=0; 			n[290]=20290601; p[290]=20290712; s[290]=0; n[291]=20290701; p[291]=20290810; s[291]=0; 			n[292]=20290801; p[292]=20290908; s[292]=0; n[293]=20290901; p[293]=20291008; s[293]=0; 			n[294]=20291001; p[294]=20291106; s[294]=0; n[295]=20291101; p[295]=20291205; s[295]=0; 			n[296]=20291201; p[296]=20300104; s[296]=0; n[297]=20300101; p[297]=20300203; s[297]=0; 			n[298]=20300201; p[298]=20300304; s[298]=0; n[299]=20300301; p[299]=20300403; s[299]=0; 			n[300]=20300401; p[300]=20300502; s[300]=0; n[301]=20300501; p[301]=20300601; s[301]=0; 			n[302]=20300601; p[302]=20300701; s[302]=0; n[303]=20300701; p[303]=20300730; s[303]=0; 			n[304]=20300801; p[304]=20300829; s[304]=0; n[305]=20300901; p[305]=20300927; s[305]=0; 			n[306]=20301001; p[306]=20301027; s[306]=0; n[307]=20301101; p[307]=20301125; s[307]=0; 			n[308]=20301201; p[308]=20301225; s[308]=0; n[309]=20310101; p[309]=20310123; s[309]=0; 			n[310]=20310201; p[310]=20310222; s[310]=0; n[311]=20310301; p[311]=20310323; s[311]=0; 			n[312]=20310301; p[312]=20310422; s[312]=1; n[313]=20310401; p[313]=20310521; s[313]=0; 			n[314]=20310501; p[314]=20310620; s[314]=0; n[315]=20310601; p[315]=20310719; s[315]=0; 			n[316]=20310701; p[316]=20310818; s[316]=0; n[317]=20310801; p[317]=20310917; s[317]=0; 			n[318]=20310901; p[318]=20311016; s[318]=0; n[319]=20311001; p[319]=20311115; s[319]=0; 			n[320]=20311101; p[320]=20311214; s[320]=0; n[321]=20311201; p[321]=20320113; s[321]=0; 			n[322]=20320101; p[322]=20320211; s[322]=0; n[323]=20320201; p[323]=20320312; s[323]=0; 			n[324]=20320301; p[324]=20320410; s[324]=0; n[325]=20320401; p[325]=20320509; s[325]=0; 			n[326]=20320501; p[326]=20320608; s[326]=0; n[327]=20320601; p[327]=20320707; s[327]=0; 			n[328]=20320701; p[328]=20320806; s[328]=0; n[329]=20320801; p[329]=20320905; s[329]=0; 			n[330]=20320901; p[330]=20321004; s[330]=0; n[331]=20321001; p[331]=20321103; s[331]=0; 			n[332]=20321101; p[332]=20321203; s[332]=0; n[333]=20321201; p[333]=20330101; s[333]=0; 			n[334]=20330101; p[334]=20330131; s[334]=0; n[335]=20330201; p[335]=20330301; s[335]=0; 			n[336]=20330301; p[336]=20330331; s[336]=0; n[337]=20330401; p[337]=20330429; s[337]=0; 			n[338]=20330501; p[338]=20330528; s[338]=0; n[339]=20330601; p[339]=20330627; s[339]=0; 			n[340]=20330701; p[340]=20330726; s[340]=0; n[341]=20330701; p[341]=20330825; s[341]=1; 			n[342]=20330801; p[342]=20330923; s[342]=0; n[343]=20330901; p[343]=20331023; s[343]=0; 			n[344]=20331001; p[344]=20331122; s[344]=0; n[345]=20331101; p[345]=20331222; s[345]=0; 			n[346]=20331201; p[346]=20340120; s[346]=0; n[347]=20340101; p[347]=20340219; s[347]=0; 			n[348]=20340201; p[348]=20340320; s[348]=0; n[349]=20340301; p[349]=20340419; s[349]=0; 			n[350]=20340401; p[350]=20340518; s[350]=0; n[351]=20340501; p[351]=20340616; s[351]=0; 			n[352]=20340601; p[352]=20340716; s[352]=0; n[353]=20340701; p[353]=20340814; s[353]=0; 			n[354]=20340801; p[354]=20340913; s[354]=0; n[355]=20340901; p[355]=20341012; s[355]=0; 			n[356]=20341001; p[356]=20341111; s[356]=0; n[357]=20341101; p[357]=20341211; s[357]=0; 			n[358]=20341201; p[358]=20350110; s[358]=0; n[359]=20350101; p[359]=20350208; s[359]=0; 			n[360]=20350201; p[360]=20350310; s[360]=0; n[361]=20350301; p[361]=20350408; s[361]=0; 			n[362]=20350401; p[362]=20350508; s[362]=0; n[363]=20350501; p[363]=20350606; s[363]=0; 			n[364]=20350601; p[364]=20350705; s[364]=0; n[365]=20350701; p[365]=20350804; s[365]=0; 			n[366]=20350801; p[366]=20350902; s[366]=0; n[367]=20350901; p[367]=20351001; s[367]=0; 			n[368]=20351001; p[368]=20351031; s[368]=0; n[369]=20351101; p[369]=20351130; s[369]=0; 			n[370]=20351201; p[370]=20351229; s[370]=0; n[371]=20360101; p[371]=20360128; s[371]=0; 			n[372]=20360201; p[372]=20360227; s[372]=0; n[373]=20360301; p[373]=20360328; s[373]=0; 			n[374]=20360401; p[374]=20360426; s[374]=0; n[375]=20360501; p[375]=20360526; s[375]=0; 			n[376]=20360601; p[376]=20360624; s[376]=0; n[377]=20360601; p[377]=20360723; s[377]=1; 			n[378]=20360701; p[378]=20360822; s[378]=0; n[379]=20360801; p[379]=20360920; s[379]=0; 			n[380]=20360901; p[380]=20361019; s[380]=0; n[381]=20361001; p[381]=20361118; s[381]=0; 			n[382]=20361101; p[382]=20361218; s[382]=0; n[383]=20361201; p[383]=20370116; s[383]=0; 			n[384]=20370101; p[384]=20370215; s[384]=0; n[385]=20370201; p[385]=20370317; s[385]=0; 			n[386]=20370301; p[386]=20370416; s[386]=0; n[387]=20370401; p[387]=20370515; s[387]=0; 			n[388]=20370501; p[388]=20370614; s[388]=0; n[389]=20370601; p[389]=20370713; s[389]=0; 			n[390]=20370701; p[390]=20370811; s[390]=0; n[391]=20370801; p[391]=20370910; s[391]=0; 			n[392]=20370901; p[392]=20371009; s[392]=0; n[393]=20371001; p[393]=20371107; s[393]=0; 			n[394]=20371101; p[394]=20371207; s[394]=0; n[395]=20371201; p[395]=20380105; s[395]=0; 			n[396]=20380101; p[396]=20380204; s[396]=0; n[397]=20380201; p[397]=20380306; s[397]=0; 			n[398]=20380301; p[398]=20380405; s[398]=0; n[399]=20380401; p[399]=20380504; s[399]=0; 			n[400]=20380501; p[400]=20380603; s[400]=0; n[401]=20380601; p[401]=20380702; s[401]=0; 			n[402]=20380701; p[402]=20380801; s[402]=0; n[403]=20380801; p[403]=20380830; s[403]=0; 			n[404]=20380901; p[404]=20380929; s[404]=0; n[405]=20381001; p[405]=20381028; s[405]=0; 			n[406]=20381101; p[406]=20381126; s[406]=0; n[407]=20381201; p[407]=20381226; s[407]=0; 			n[408]=20390101; p[408]=20390124; s[408]=0; n[409]=20390201; p[409]=20390223; s[409]=0; 			n[410]=20390301; p[410]=20390325; s[410]=0; n[411]=20390401; p[411]=20390423; s[411]=0; 			n[412]=20390501; p[412]=20390523; s[412]=0; n[413]=20390501; p[413]=20390622; s[413]=1; 			n[414]=20390601; p[414]=20390721; s[414]=0; n[415]=20390701; p[415]=20390820; s[415]=0; 			n[416]=20390801; p[416]=20390918; s[416]=0; n[417]=20390901; p[417]=20391018; s[417]=0; 			n[418]=20391001; p[418]=20391116; s[418]=0; n[419]=20391101; p[419]=20391216; s[419]=0; 			n[420]=20391201; p[420]=20400114; s[420]=0; n[421]=20400101; p[421]=20400212; s[421]=0; 			n[422]=20400201; p[422]=20400313; s[422]=0; n[423]=20400301; p[423]=20400411; s[423]=0; 			n[424]=20400401; p[424]=20400511; s[424]=0; n[425]=20400501; p[425]=20400610; s[425]=0; 			n[426]=20400601; p[426]=20400709; s[426]=0; n[427]=20400701; p[427]=20400808; s[427]=0; 			n[428]=20400801; p[428]=20400907; s[428]=0; n[429]=20400901; p[429]=20401006; s[429]=0; 			n[430]=20401001; p[430]=20401105; s[430]=0; n[431]=20401101; p[431]=20401204; s[431]=0; 			n[432]=20401201; p[432]=20410103; s[432]=0; n[433]=20410101; p[433]=20410201; s[433]=0; 			n[434]=20410201; p[434]=20410303; s[434]=0; n[435]=20410301; p[435]=20410401; s[435]=0; 			n[436]=20410401; p[436]=20410430; s[436]=0; n[437]=20410501; p[437]=20410530; s[437]=0; 			n[438]=20410601; p[438]=20410628; s[438]=0; n[439]=20410701; p[439]=20410728; s[439]=0; 			n[440]=20410801; p[440]=20410827; s[440]=0; n[441]=20410901; p[441]=20410925; s[441]=0; 			n[442]=20411001; p[442]=20411025; s[442]=0; n[443]=20411101; p[443]=20411124; s[443]=0; 			n[444]=20411201; p[444]=20411223; s[444]=0; n[445]=20420101; p[445]=20420122; s[445]=0; 			n[446]=20420201; p[446]=20420220; s[446]=0; n[447]=20420201; p[447]=20420322; s[447]=1; 			n[448]=20420301; p[448]=20420420; s[448]=0; n[449]=20420401; p[449]=20420519; s[449]=0; 			n[450]=20420501; p[450]=20420618; s[450]=0; n[451]=20420601; p[451]=20420717; s[451]=0; 			n[452]=20420701; p[452]=20420816; s[452]=0; n[453]=20420801; p[453]=20420914; s[453]=0; 			n[454]=20420901; p[454]=20421014; s[454]=0; n[455]=20421001; p[455]=20421113; s[455]=0; 			n[456]=20421101; p[456]=20421212; s[456]=0; n[457]=20421201; p[457]=20430111; s[457]=0; 			n[458]=20430101; p[458]=20430210; s[458]=0; n[459]=20430201; p[459]=20430311; s[459]=0; 			n[460]=20430301; p[460]=20430410; s[460]=0; n[461]=20430401; p[461]=20430509; s[461]=0; 			n[462]=20430501; p[462]=20430607; s[462]=0; n[463]=20430601; p[463]=20430707; s[463]=0; 			n[464]=20430701; p[464]=20430805; s[464]=0; n[465]=20430801; p[465]=20430903; s[465]=0; 			n[466]=20430901; p[466]=20431003; s[466]=0; n[467]=20431001; p[467]=20431102; s[467]=0; 			n[468]=20431101; p[468]=20431201; s[468]=0; n[469]=20431201; p[469]=20431231; s[469]=0; 			n[470]=20440101; p[470]=20440130; s[470]=0; n[471]=20440201; p[471]=20440229; s[471]=0; 			n[472]=20440301; p[472]=20440329; s[472]=0; n[473]=20440401; p[473]=20440428; s[473]=0; 			n[474]=20440501; p[474]=20440527; s[474]=0; n[475]=20440601; p[475]=20440625; s[475]=0; 			n[476]=20440701; p[476]=20440725; s[476]=0; n[477]=20440701; p[477]=20440823; s[477]=1; 			n[478]=20440801; p[478]=20440921; s[478]=0; n[479]=20440901; p[479]=20441021; s[479]=0; 			n[480]=20441001; p[480]=20441120; s[480]=0; n[481]=20441101; p[481]=20441219; s[481]=0; 			n[482]=20441201; p[482]=20450118; s[482]=0; n[483]=20450101; p[483]=20450217; s[483]=0; 			n[484]=20450201; p[484]=20450319; s[484]=0; n[485]=20450301; p[485]=20450417; s[485]=0; 			n[486]=20450401; p[486]=20450517; s[486]=0; n[487]=20450501; p[487]=20450615; s[487]=0; 			n[488]=20450601; p[488]=20450714; s[488]=0; n[489]=20450701; p[489]=20450813; s[489]=0; 			n[490]=20450801; p[490]=20450911; s[490]=0; n[491]=20450901; p[491]=20451010; s[491]=0; 			n[492]=20451001; p[492]=20451109; s[492]=0; n[493]=20451101; p[493]=20451208; s[493]=0; 			n[494]=20451201; p[494]=20460107; s[494]=0; n[495]=20460101; p[495]=20460206; s[495]=0; 			n[496]=20460201; p[496]=20460308; s[496]=0; n[497]=20460301; p[497]=20460406; s[497]=0; 			n[498]=20460401; p[498]=20460506; s[498]=0; n[499]=20460501; p[499]=20460605; s[499]=0; 			n[500]=20460601; p[500]=20460704; s[500]=0; n[501]=20460701; p[501]=20460802; s[501]=0; 			n[502]=20460801; p[502]=20460901; s[502]=0; n[503]=20460901; p[503]=20460930; s[503]=0; 			n[504]=20461001; p[504]=20461029; s[504]=0; n[505]=20461101; p[505]=20461128; s[505]=0; 			n[506]=20461201; p[506]=20461227; s[506]=0; n[507]=20470101; p[507]=20470126; s[507]=0; 			n[508]=20470201; p[508]=20470225; s[508]=0; n[509]=20470301; p[509]=20470326; s[509]=0; 			n[510]=20470401; p[510]=20470425; s[510]=0; n[511]=20470501; p[511]=20470525; s[511]=0; 			n[512]=20470501; p[512]=20470623; s[512]=1; n[513]=20470601; p[513]=20470723; s[513]=0; 			n[514]=20470701; p[514]=20470821; s[514]=0; n[515]=20470801; p[515]=20470920; s[515]=0; 			n[516]=20470901; p[516]=20471019; s[516]=0; n[517]=20471001; p[517]=20471117; s[517]=0; 			n[518]=20471101; p[518]=20471217; s[518]=0; n[519]=20471201; p[519]=20480115; s[519]=0; 			n[520]=20480101; p[520]=20480214; s[520]=0; n[521]=20480201; p[521]=20480314; s[521]=0; 			n[522]=20480301; p[522]=20480413; s[522]=0; n[523]=20480401; p[523]=20480513; s[523]=0; 			n[524]=20480501; p[524]=20480611; s[524]=0; n[525]=20480601; p[525]=20480711; s[525]=0; 			n[526]=20480701; p[526]=20480810; s[526]=0; n[527]=20480801; p[527]=20480908; s[527]=0; 			n[528]=20480901; p[528]=20481008; s[528]=0; n[529]=20481001; p[529]=20481106; s[529]=0; 			n[530]=20481101; p[530]=20481206; s[530]=0; n[531]=20481201; p[531]=20490104; s[531]=0; 			n[532]=20490101; p[532]=20490202; s[532]=0; n[533]=20490201; p[533]=20490304; s[533]=0; 			n[534]=20490301; p[534]=20490402; s[534]=0; n[535]=20490401; p[535]=20490502; s[535]=0; 			n[536]=20490501; p[536]=20490531; s[536]=0; n[537]=20490601; p[537]=20490630; s[537]=0; 			n[538]=20490701; p[538]=20490730; s[538]=0; n[539]=20490801; p[539]=20490828; s[539]=0; 			n[540]=20490901; p[540]=20490927; s[540]=0; n[541]=20491001; p[541]=20491027; s[541]=0; 			n[542]=20491101; p[542]=20491125; s[542]=0; n[543]=20491201; p[543]=20491225; s[543]=0; 			n[544]=20500101; p[544]=20500123; s[544]=0; n[545]=20500201; p[545]=20500222; s[545]=0; 			n[546]=20500301; p[546]=20500323; s[546]=0; n[547]=20500301; p[547]=20500421; s[547]=1; 			n[548]=20500401; p[548]=20500521; s[548]=0; n[549]=20500501; p[549]=20500619; s[549]=0; 			n[550]=20500601; p[550]=20500719; s[550]=0; n[551]=20500701; p[551]=20500817; s[551]=0; 			n[552]=20500801; p[552]=20500916; s[552]=0; n[553]=20500901; p[553]=20501016; s[553]=0; 			n[554]=20501001; p[554]=20501114; s[554]=0; n[555]=20501101; p[555]=20501214; s[555]=0; 			n[556]=20501201; p[556]=20510113; s[556]= 0; 		}				public function get fullyear():uint		{			return Year;		}				public function get month():uint		{			return Month;		}				public function get day():uint		{			return Day;		}	}}