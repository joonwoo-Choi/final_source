package orpheus.movieclip{	import flash.display.MovieClip;	import flash.geom.Point;	public class DynamicMovie extends MovieClip	{		public var rp:Point;		public function DynamicMovie()		{			super();			setRegistration();		}		public function setRegistration(x:Number = 0, y:Number = 0):void		{			rp = new Point(x, y);		}		public function get dx():Number		{			var p:Point = this.parent.globalToLocal(this.localToGlobal(rp));			return p.x;		}		public function set dx(value:Number):void		{			var p:Point = this.parent.globalToLocal(this.localToGlobal(rp));			this.x += value - p.x;		}		public function get dy():Number		{			var p:Point = this.parent.globalToLocal(this.localToGlobal(rp));			return p.y;		}		public function set dy(value:Number):void		{			var p:Point = this.parent.globalToLocal(this.localToGlobal(rp));			this.y += value - p.y;		}		public function get dscaleX():Number		{			return this.scaleX;		}		public function set dscaleX(value:Number):void		{			this.dSetProperty("scaleX", value);		}		public function get dscaleY():Number		{			return this.scaleY;		}		public function set dscaleY(value:Number):void		{			this.dSetProperty("scaleY", value);		}		public function get drotation():Number		{			return this.rotation;		}		public function set drotation(value:Number):void		{			this.dSetProperty("rotation", value);		}		public function get dmouseX():Number		{			return Math.round(this.mouseX - rp.x);		}		public function get dmouseY():Number		{			return Math.round(this.mouseY - rp.y);		}		public function dSetProperty(prop:String, n:Number):void		{			var a:Point = this.parent.globalToLocal(this.localToGlobal(rp));			this[prop] = n;			var b:Point = this.parent.globalToLocal(this.localToGlobal(rp));			this.x -= b.x - a.x;			this.y -= b.y - a.y;		}	}}